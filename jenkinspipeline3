pipeline {
    agent any
    tools { 
        maven 'Maven3.6.3' 
    }
    stages {
        
        stage('Build the Application') {
            steps {
                echo 'Build the Application..'
                sh 'mvn compile -f pom.xml'
            }
        }
        stage('Deploy to Test') {
            steps {
                echo 'Deploy to Test..'
                 sh 'mvn package -f pom.xml' 
               deploy adapters: [tomcat8(credentialsId: 'tomcat-token', path: '', url: 'http://3.15.26.223:8080')], contextPath: '/QAWebapp', onFailure: false, war: '**/*.war'
            }
         }
       
        
        stage('Performance Test') {
            steps {
                echo 'Performance Test..'
                //blazeMeterTest credentialsId:'BlazeMeter-recent',
               // serverUrl:'https://a.blazemeter.com',
                //testId:'',
               // notes:'',
               // sessionProperties:'',
               // jtlPath:'',
               // junitPath:'',
               // getJtl:false,
               // getJunit:false
               //comment below line for not to start Blazmeter
                //blazeMeterTest credentialsId: 'BlazeMeter-recent', testId: '9031524.taurus', workspaceId: '756537'

            }
         }   
        stage('Deploy to Production') {
            steps {
                echo 'Deploy to Production..'
               // sh 'mvn package -f pom.xml' 
               //deploy adapters: [tomcat8(credentialsId: 'tomcat-token', path: '', url: 'http://34.68.12.79:8080')], contextPath: '/QAWebapp', onFailure: false, war: '**/*.war'
            }
         }   
        
        stage('Notification send') {
            steps {
                echo 'Notification send..'
                slackSend color: '#BADA55', message: 'Hello, Bhagabat ----good jobs!'
                
            }
         }
         
         stage('Docker Build and Tag') {
           steps {
                 echo 'docker file...' 
                //sh 'docker build -t webapp:latest .'
                //sh 'docker tag webapp bhagabat10/webapp:latest'
          }
        }
     
        stage('Publish image to Docker Hub') {
         
            steps {
                 //withDockerRegistry([ credentialsId: "DockerID", url: "" ]) {
                 //sh  'docker push bhagabat10/webapp:latest'
                 echo 'docker file.3333..'
                  //}
                 
                }
             }
        stage('Run Docker container on remote hosts') {
             
            steps {
                echo 'docker file....4444..'
              //sh "docker -H ssh://root@13.59.44.228 run -d -p 8081:8080 bhagabat10/webapp"
             // sh 'ssh -tt root@13.59.44.228'
            }
        }
         
    }
}
