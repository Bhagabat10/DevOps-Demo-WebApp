pipeline{
    agent any
    tools { 
        maven 'Maven3.6.3' 
    }
   stages{
       stage('Checkout'){
          steps{
           checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/Bhagabat10/DevOps-Demo-WebApp.git']]])
          }
       }
       
       stage('Build') {
           steps {
              sh 'mvn compile -f pom.xml'
           }
       }
        stage('Send Build Info:Jira') {
            steps {
                echo 'jira...test...'
                //jiraSendBuildInfo branch: 'DEV-1', site: 'anant338.atlassian.net'
                //jiraComment body: 'Jenkins Pipeline Build Completed', issueKey: 'DEV-1'
            }
        }
       stage('Code Analysis') {
           steps{
               echo 'Static Code analysis..'
               //withSonarQubeEnv(credentialsId: 'AdminSonar-Token', installationName: 'SonarQube') {
                // sh "${tool("SonarQube")}/bin/sonar-scanner \
               // -Dsonar.projectKey=. \
               // -Dsonar.sources=. \
               // -Dsonar.tests=. \
               // -Dsonar.inclusions=**/test/java/servlet/createpage_junit.java \
               // -Dsonar.test.exclusions=**/test/java/servlet/createpage_junit.java \
               // -Dsonar.login=admin \
               // -Dsonar.password=sonar "
               //  sh 'mvn validate -f pom.xml'
              //  }
           }
       }
       stage('Deploy to Artifactory') {
           steps {
           echo 'Artifactory Deploy..'
              
           }
       }
       
       stage('Deploy to test') {
           steps {
               echo 'Test Deploy..'
               sh 'mvn package -f pom.xml' 
               deploy adapters: [tomcat8(credentialsId: 'tomcat_toket', path: '', url: 'http://18.222.69.234:8080')], contextPath: '/QAWebapp', onFailure: false, war: '**/*.war'
               
             }
       }
       stage('UI Test and Notification') {
           parallel {
              stage('UI Test') {
                 steps {
                 echo 'UI Test..'
                 sh 'mvn test -f functionaltest/pom.xml'   
                 publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '\\functionaltest\\target\\surefire-reports', reportFiles: 'index.html', reportName: 'UI Test', reportTitles: ''])
                 }
              }
       
               //stage('Performance Test') {
               //     steps {
               //        blazeMeterTest credentialsId: 'fd465f9c-9c6c-498a-8a8a-78f5a82ae0cc', testId: '9014517.taurus', workspaceId: ''
               //     }
               //  }
                stage('Slack Notification') {
                   steps {
                       echo 'Notification..'
                       slackSend channel: '', message: 'Deploy to Test was successful.'  
                   }
                }
           }
       }
       
        stage('Deploy to PROD') {
           steps {
               sh 'mvn clean install -f pom.xml' 
               deploy adapters: [tomcat8(credentialsId: 'tomcat_toket', path: '', url: 'http://3.141.28.192:8080')], contextPath: '/ProdWebapp', war: '**/*.war'
               
               
           }
       }
    stage('Sanity test and Notification') {
      parallel {
           stage('Sanity Test') {
               steps {
                  echo 'Sanity Test.'
                  //sh 'mvn test -f Acceptancetest/pom.xml'   
                 // publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '\\Acceptancetest\\target\\surefire-reports', reportFiles: 'index.html', reportName: 'Sanity Test Report', reportTitles: ''])
               }
           }
           stage('Slack Notification') {
               steps {
                 echo 'Notification..'
                 //slackSend channel: 'alerts', message: 'Deploy to PROD was successful.'  
               }
           }
           
       }
    }
    stage('Send Deployment Info:Jira') {
                steps {
                echo 'Jira..'
                   // jiraSendDeploymentInfo environmentId: 'PROD', environmentName: '"Production', environmentType: 'production', issueKeys: ['DEV-1'], serviceIds: [''], site: 'anant338.atlassian.net', state: 'successful'
                   // jiraComment body: 'Jenkins Pipeline Completed', issueKey: 'DEV-1'
                    
                }
            }
   }
}
